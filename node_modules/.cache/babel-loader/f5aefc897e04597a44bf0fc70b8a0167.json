{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport AdminService from \"../services/admin.service\";\nexport const getAllAdminAsync = createAsyncThunk(\"admin/get\", async (values, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const data = await AdminService.getAllAdmin();\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const toggleAdminStatusAsync = createAsyncThunk(\"admin/activateDeactivate\", async (values, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const data = await AdminService.toggleAdminStatus(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const addNewAdminAsync = createAsyncThunk(\"admin/add\", async (values, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    const data = await AdminService.addNewAdmin(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const deleteAdminAsync = createAsyncThunk(\"admin/delete\", async (values, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const data = await AdminService.deleteAdmin(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const adminCustomerLoginAsync = createAsyncThunk(\"admin/customerLogin\", async (values, _ref5) => {\n  let {\n    rejectWithValue\n  } = _ref5;\n\n  try {\n    const data = await AdminService.adminCustomerLogin(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  getAllAdminsLoading: false,\n  toggleStatusLoading: false,\n  addAdminLoading: false,\n  deleteAdminLoading: false,\n  loginCustomer: false,\n  response: []\n};\nconst adminSlice = createSlice({\n  name: \"admin\",\n  initialState,\n  extraReducers: {\n    [getAllAdminAsync.pending]: state => {\n      state.getAllAdminsLoading = true;\n    },\n    [getAllAdminAsync.fulfilled]: (state, action) => {\n      state.getAllAdminsLoading = false;\n    },\n    [getAllAdminAsync.rejected]: state => {\n      state.getAllAdminsLoading = false;\n    },\n    [toggleAdminStatusAsync.pending]: state => {\n      state.toggleStatusLoading = true;\n    },\n    [toggleAdminStatusAsync.fulfilled]: (state, action) => {\n      state.toggleStatusLoading = false;\n    },\n    [toggleAdminStatusAsync.rejected]: state => {\n      state.toggleStatusLoading = false;\n    },\n    [addNewAdminAsync.pending]: state => {\n      state.addAdminLoading = true;\n    },\n    [addNewAdminAsync.fulfilled]: (state, action) => {\n      state.addAdminLoading = false;\n    },\n    [addNewAdminAsync.rejected]: state => {\n      state.addAdminLoading = false;\n    },\n    [deleteAdminAsync.pending]: state => {\n      state.deleteAdminLoading = true;\n    },\n    [deleteAdminAsync.fulfilled]: (state, action) => {\n      state.deleteAdminLoading = false;\n    },\n    [deleteAdminAsync.rejected]: state => {\n      state.deleteAdminLoading = false;\n    },\n    [adminCustomerLoginAsync.pending]: state => {\n      state.loginCustomer = true;\n    },\n    [adminCustomerLoginAsync.fulfilled]: (state, action) => {\n      state.loginCustomer = false;\n      state.response = action === null || action === void 0 ? void 0 : action.payload;\n    },\n    [adminCustomerLoginAsync.rejected]: state => {\n      state.loginCustomer = false;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = adminSlice;\nexport const {\n  resetInitialState\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/slices/admin.js"],"names":["createSlice","createAsyncThunk","AdminService","getAllAdminAsync","values","rejectWithValue","data","getAllAdmin","error","response","toggleAdminStatusAsync","toggleAdminStatus","addNewAdminAsync","addNewAdmin","deleteAdminAsync","deleteAdmin","adminCustomerLoginAsync","adminCustomerLogin","initialState","getAllAdminsLoading","toggleStatusLoading","addAdminLoading","deleteAdminLoading","loginCustomer","adminSlice","name","extraReducers","pending","state","fulfilled","action","rejected","payload","reducer","actions","resetInitialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC9C,WAD8C,EAE9C,OAAOG,MAAP,WAAuC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACK,WAAb,EAAnB;AACA,WAAOD,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOH,eAAe,CAACG,KAAK,CAACC,QAAN,CAAeH,IAAhB,CAAtB;AACD;AACF,CAZ6C,CAAzC;AAeP,OAAO,MAAMI,sBAAsB,GAAGT,gBAAgB,CACpD,0BADoD,EAEpD,OAAOG,MAAP,YAAuC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACS,iBAAb,CAA+BP,MAA/B,CAAnB;AACA,WAAOE,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOH,eAAe,CAACG,KAAK,CAACC,QAAN,CAAeH,IAAhB,CAAtB;AACD;AACF,CAZmD,CAA/C;AAeP,OAAO,MAAMM,gBAAgB,GAAGX,gBAAgB,CAC9C,WAD8C,EAE9C,OAAOG,MAAP,YAAuC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACW,WAAb,CAAyBT,MAAzB,CAAnB;AACA,WAAOE,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOH,eAAe,CAACG,KAAK,CAACC,QAAN,CAAeH,IAAhB,CAAtB;AACD;AACF,CAZ6C,CAAzC;AAeP,OAAO,MAAMQ,gBAAgB,GAAGb,gBAAgB,CAC9C,cAD8C,EAE9C,OAAOG,MAAP,YAAuC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACa,WAAb,CAAyBX,MAAzB,CAAnB;AACA,WAAOE,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOH,eAAe,CAACG,KAAK,CAACC,QAAN,CAAeH,IAAhB,CAAtB;AACD;AACF,CAZ6C,CAAzC;AAeP,OAAO,MAAMU,uBAAuB,GAAGf,gBAAgB,CACrD,qBADqD,EAErD,OAAOG,MAAP,YAAuC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMJ,YAAY,CAACe,kBAAb,CAAgCb,MAAhC,CAAnB;AACA,WAAOE,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOH,eAAe,CAACG,KAAK,CAACC,QAAN,CAAeH,IAAhB,CAAtB;AACD;AACF,CAZoD,CAAhD;AAeP,MAAMY,YAAY,GAAG;AACnBC,EAAAA,mBAAmB,EAAE,KADF;AAEnBC,EAAAA,mBAAmB,EAAE,KAFF;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,kBAAkB,EAAE,KAJD;AAKnBC,EAAAA,aAAa,EAAE,KALI;AAMnBd,EAAAA,QAAQ,EAAE;AANS,CAArB;AASA,MAAMe,UAAU,GAAGxB,WAAW,CAAC;AAC7ByB,EAAAA,IAAI,EAAE,OADuB;AAE7BP,EAAAA,YAF6B;AAG7BQ,EAAAA,aAAa,EAAE;AACb,KAACvB,gBAAgB,CAACwB,OAAlB,GAA6BC,KAAD,IAAW;AACrCA,MAAAA,KAAK,CAACT,mBAAN,GAA4B,IAA5B;AACD,KAHY;AAIb,KAAChB,gBAAgB,CAAC0B,SAAlB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/CF,MAAAA,KAAK,CAACT,mBAAN,GAA4B,KAA5B;AACD,KANY;AAOb,KAAChB,gBAAgB,CAAC4B,QAAlB,GAA8BH,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACT,mBAAN,GAA4B,KAA5B;AACD,KATY;AAUb,KAACT,sBAAsB,CAACiB,OAAxB,GAAmCC,KAAD,IAAW;AAC3CA,MAAAA,KAAK,CAACR,mBAAN,GAA4B,IAA5B;AACD,KAZY;AAab,KAACV,sBAAsB,CAACmB,SAAxB,GAAoC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACrDF,MAAAA,KAAK,CAACR,mBAAN,GAA4B,KAA5B;AACD,KAfY;AAgBb,KAACV,sBAAsB,CAACqB,QAAxB,GAAoCH,KAAD,IAAW;AAC5CA,MAAAA,KAAK,CAACR,mBAAN,GAA4B,KAA5B;AACD,KAlBY;AAmBb,KAACR,gBAAgB,CAACe,OAAlB,GAA6BC,KAAD,IAAW;AACrCA,MAAAA,KAAK,CAACP,eAAN,GAAwB,IAAxB;AACD,KArBY;AAsBb,KAACT,gBAAgB,CAACiB,SAAlB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/CF,MAAAA,KAAK,CAACP,eAAN,GAAwB,KAAxB;AACD,KAxBY;AAyBb,KAACT,gBAAgB,CAACmB,QAAlB,GAA8BH,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACP,eAAN,GAAwB,KAAxB;AACD,KA3BY;AA4Bb,KAACP,gBAAgB,CAACa,OAAlB,GAA6BC,KAAD,IAAW;AACrCA,MAAAA,KAAK,CAACN,kBAAN,GAA2B,IAA3B;AACD,KA9BY;AA+Bb,KAACR,gBAAgB,CAACe,SAAlB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/CF,MAAAA,KAAK,CAACN,kBAAN,GAA2B,KAA3B;AACD,KAjCY;AAkCb,KAACR,gBAAgB,CAACiB,QAAlB,GAA8BH,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACN,kBAAN,GAA2B,KAA3B;AACD,KApCY;AAqCb,KAACN,uBAAuB,CAACW,OAAzB,GAAoCC,KAAD,IAAW;AAC5CA,MAAAA,KAAK,CAACL,aAAN,GAAsB,IAAtB;AACD,KAvCY;AAwCb,KAACP,uBAAuB,CAACa,SAAzB,GAAqC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtDF,MAAAA,KAAK,CAACL,aAAN,GAAsB,KAAtB;AACAK,MAAAA,KAAK,CAACnB,QAAN,GAAiBqB,MAAjB,aAAiBA,MAAjB,uBAAiBA,MAAM,CAAEE,OAAzB;AACD,KA3CY;AA4Cb,KAAChB,uBAAuB,CAACe,QAAzB,GAAqCH,KAAD,IAAW;AAC7CA,MAAAA,KAAK,CAACL,aAAN,GAAsB,KAAtB;AACD;AA9CY;AAHc,CAAD,CAA9B;AAqDA,MAAM;AAAEU,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBV,UAA7B;AACA,OAAO,MAAM;AAAEW,EAAAA;AAAF,IAAwBD,OAA9B;AAEP,eAAeD,OAAf","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport AdminService from \"../services/admin.service\";\n\nexport const getAllAdminAsync = createAsyncThunk(\n  \"admin/get\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await AdminService.getAllAdmin();\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const toggleAdminStatusAsync = createAsyncThunk(\n  \"admin/activateDeactivate\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await AdminService.toggleAdminStatus(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const addNewAdminAsync = createAsyncThunk(\n  \"admin/add\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await AdminService.addNewAdmin(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const deleteAdminAsync = createAsyncThunk(\n  \"admin/delete\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await AdminService.deleteAdmin(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const adminCustomerLoginAsync = createAsyncThunk(\n  \"admin/customerLogin\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await AdminService.adminCustomerLogin(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  getAllAdminsLoading: false,\n  toggleStatusLoading: false,\n  addAdminLoading: false,\n  deleteAdminLoading: false,\n  loginCustomer: false,\n  response: [],\n};\n\nconst adminSlice = createSlice({\n  name: \"admin\",\n  initialState,\n  extraReducers: {\n    [getAllAdminAsync.pending]: (state) => {\n      state.getAllAdminsLoading = true;\n    },\n    [getAllAdminAsync.fulfilled]: (state, action) => {\n      state.getAllAdminsLoading = false;\n    },\n    [getAllAdminAsync.rejected]: (state) => {\n      state.getAllAdminsLoading = false;\n    },\n    [toggleAdminStatusAsync.pending]: (state) => {\n      state.toggleStatusLoading = true;\n    },\n    [toggleAdminStatusAsync.fulfilled]: (state, action) => {\n      state.toggleStatusLoading = false;\n    },\n    [toggleAdminStatusAsync.rejected]: (state) => {\n      state.toggleStatusLoading = false;\n    },\n    [addNewAdminAsync.pending]: (state) => {\n      state.addAdminLoading = true;\n    },\n    [addNewAdminAsync.fulfilled]: (state, action) => {\n      state.addAdminLoading = false;\n    },\n    [addNewAdminAsync.rejected]: (state) => {\n      state.addAdminLoading = false;\n    },\n    [deleteAdminAsync.pending]: (state) => {\n      state.deleteAdminLoading = true;\n    },\n    [deleteAdminAsync.fulfilled]: (state, action) => {\n      state.deleteAdminLoading = false;\n    },\n    [deleteAdminAsync.rejected]: (state) => {\n      state.deleteAdminLoading = false;\n    },\n    [adminCustomerLoginAsync.pending]: (state) => {\n      state.loginCustomer = true;\n    },\n    [adminCustomerLoginAsync.fulfilled]: (state, action) => {\n      state.loginCustomer = false;\n      state.response = action?.payload;\n    },\n    [adminCustomerLoginAsync.rejected]: (state) => {\n      state.loginCustomer = false;\n    },\n  },\n});\n\nconst { reducer, actions } = adminSlice;\nexport const { resetInitialState } = actions;\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}