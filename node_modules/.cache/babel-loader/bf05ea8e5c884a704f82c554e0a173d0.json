{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport CustomerService from \"../services/customer.service\";\nexport const getAllDataConsumersAsync = createAsyncThunk(\"customers/get\", async (values, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const data = await CustomerService.getAllDataConsumers(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getAllDataProvidersAsync = createAsyncThunk(\"customers/get\", async (values, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const data = await CustomerService.getAllDataProviders(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const toggleCustomersLiveAsync = createAsyncThunk(\"customers/toggle\", async (values, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    const data = await CustomerService.toggleLiveConsumers(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getSingleCustomerAsync = createAsyncThunk(\"customers/getSingle\", async (values, _ref4) => {\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const data = await CustomerService.getSingleCustomer(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const deleteCustomerAsync = createAsyncThunk(\"customers/delete\", async (values, _ref5) => {\n  let {\n    rejectWithValue\n  } = _ref5;\n\n  try {\n    const data = await CustomerService.deleteCustomer(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const restoreCustomerAsync = createAsyncThunk(\"customers/restore\", async (values, _ref6) => {\n  let {\n    rejectWithValue\n  } = _ref6;\n\n  try {\n    const data = await CustomerService.restoreCustomer(values);\n    return data;\n  } catch (error) {\n    if (!error.response) {\n      throw error;\n    }\n\n    return rejectWithValue(error.response.data);\n  }\n});\nconst initialState = {\n  response: [],\n  getAllDataConsumersLoading: false,\n  getAllDataProvidersLoading: false,\n  toggleCustomerLiveLoading: false,\n  getSingleCustomerLoading: false,\n  deleteCustomerLoading: false,\n  restoreCustomerLoading: false\n};\nconst customerSlice = createSlice({\n  name: \"customers\",\n  initialState,\n  extraReducers: {\n    [getAllDataConsumersAsync.pending]: state => {\n      state.getAllDataConsumersLoading = true;\n    },\n    [getAllDataConsumersAsync.fulfilled]: (state, action) => {\n      state.getAllDataConsumersLoading = false;\n    },\n    [getAllDataConsumersAsync.rejected]: state => {\n      state.getAllDataConsumersLoading = false;\n    },\n    [getAllDataProvidersAsync.pending]: state => {\n      state.getAllDataProvidersLoading = true;\n    },\n    [getAllDataProvidersAsync.fulfilled]: (state, action) => {\n      state.getAllDataProvidersLoading = false;\n    },\n    [getAllDataProvidersAsync.rejected]: state => {\n      state.getAllDataProvidersLoading = false;\n    },\n    [toggleCustomersLiveAsync.pending]: state => {\n      state.toggleCustomerLiveLoading = true;\n    },\n    [toggleCustomersLiveAsync.fulfilled]: (state, action) => {\n      state.toggleCustomerLiveLoading = false;\n    },\n    [toggleCustomersLiveAsync.rejected]: state => {\n      state.toggleCustomerLiveLoading = false;\n    },\n    [getSingleCustomerAsync.pending]: state => {\n      state.getSingleCustomerLoading = true;\n    },\n    [getSingleCustomerAsync.fulfilled]: (state, action) => {\n      var _action$payload, _action$payload$data;\n\n      state.getSingleCustomerLoading = false;\n      state.response = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$data = _action$payload.data) === null || _action$payload$data === void 0 ? void 0 : _action$payload$data.customer;\n    },\n    [getSingleCustomerAsync.rejected]: state => {\n      state.getSingleCustomerLoading = false;\n    },\n    [deleteCustomerAsync.pending]: state => {\n      state.deleteCustomerLoading = true;\n    },\n    [deleteCustomerAsync.fulfilled]: state => {\n      state.deleteCustomerLoading = false; // state.response = action.payload?.data?.customer;\n    },\n    [deleteCustomerAsync.rejected]: state => {\n      state.deleteCustomerLoading = false;\n    },\n    [restoreCustomerAsync.pending]: state => {\n      state.restoreCustomerLoading = true;\n    },\n    [restoreCustomerAsync.fulfilled]: state => {\n      state.restoreCustomerLoading = false; // state.response = action.payload?.data?.customer;\n    },\n    [restoreCustomerAsync.rejected]: state => {\n      state.restoreCustomerLoading = false;\n    }\n  }\n});\nconst {\n  reducer\n} = customerSlice;\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/slices/customers.js"],"names":["createSlice","createAsyncThunk","CustomerService","getAllDataConsumersAsync","values","rejectWithValue","data","getAllDataConsumers","error","response","getAllDataProvidersAsync","getAllDataProviders","toggleCustomersLiveAsync","toggleLiveConsumers","getSingleCustomerAsync","getSingleCustomer","deleteCustomerAsync","deleteCustomer","restoreCustomerAsync","restoreCustomer","initialState","getAllDataConsumersLoading","getAllDataProvidersLoading","toggleCustomerLiveLoading","getSingleCustomerLoading","deleteCustomerLoading","restoreCustomerLoading","customerSlice","name","extraReducers","pending","state","fulfilled","action","rejected","payload","customer","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport CustomerService from \"../services/customer.service\";\n\nexport const getAllDataConsumersAsync = createAsyncThunk(\n  \"customers/get\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.getAllDataConsumers(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const getAllDataProvidersAsync = createAsyncThunk(\n  \"customers/get\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.getAllDataProviders(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const toggleCustomersLiveAsync = createAsyncThunk(\n  \"customers/toggle\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.toggleLiveConsumers(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const getSingleCustomerAsync = createAsyncThunk(\n  \"customers/getSingle\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.getSingleCustomer(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const deleteCustomerAsync = createAsyncThunk(\n  \"customers/delete\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.deleteCustomer(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const restoreCustomerAsync = createAsyncThunk(\n  \"customers/restore\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const data = await CustomerService.restoreCustomer(values);\n      return data;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst initialState = {\n  response: [],\n  getAllDataConsumersLoading: false,\n  getAllDataProvidersLoading: false,\n  toggleCustomerLiveLoading: false,\n  getSingleCustomerLoading: false,\n  deleteCustomerLoading: false,\n  restoreCustomerLoading: false,\n};\n\nconst customerSlice = createSlice({\n  name: \"customers\",\n  initialState,\n  extraReducers: {\n    [getAllDataConsumersAsync.pending]: (state) => {\n      state.getAllDataConsumersLoading = true;\n    },\n    [getAllDataConsumersAsync.fulfilled]: (state, action) => {\n      state.getAllDataConsumersLoading = false;\n    },\n    [getAllDataConsumersAsync.rejected]: (state) => {\n      state.getAllDataConsumersLoading = false;\n    },\n    [getAllDataProvidersAsync.pending]: (state) => {\n      state.getAllDataProvidersLoading = true;\n    },\n    [getAllDataProvidersAsync.fulfilled]: (state, action) => {\n      state.getAllDataProvidersLoading = false;\n    },\n    [getAllDataProvidersAsync.rejected]: (state) => {\n      state.getAllDataProvidersLoading = false;\n    },\n    [toggleCustomersLiveAsync.pending]: (state) => {\n      state.toggleCustomerLiveLoading = true;\n    },\n    [toggleCustomersLiveAsync.fulfilled]: (state, action) => {\n      state.toggleCustomerLiveLoading = false;\n    },\n    [toggleCustomersLiveAsync.rejected]: (state) => {\n      state.toggleCustomerLiveLoading = false;\n    },\n    [getSingleCustomerAsync.pending]: (state) => {\n      state.getSingleCustomerLoading = true;\n    },\n    [getSingleCustomerAsync.fulfilled]: (state, action) => {\n      state.getSingleCustomerLoading = false;\n      state.response = action.payload?.data?.customer;\n    },\n    [getSingleCustomerAsync.rejected]: (state) => {\n      state.getSingleCustomerLoading = false;\n    },\n    [deleteCustomerAsync.pending]: (state) => {\n      state.deleteCustomerLoading = true;\n    },\n    [deleteCustomerAsync.fulfilled]: (state) => {\n      state.deleteCustomerLoading = false;\n      // state.response = action.payload?.data?.customer;\n    },\n    [deleteCustomerAsync.rejected]: (state) => {\n      state.deleteCustomerLoading = false;\n    },\n    [restoreCustomerAsync.pending]: (state) => {\n      state.restoreCustomerLoading = true;\n    },\n    [restoreCustomerAsync.fulfilled]: (state) => {\n      state.restoreCustomerLoading = false;\n      // state.response = action.payload?.data?.customer;\n    },\n    [restoreCustomerAsync.rejected]: (state) => {\n      state.restoreCustomerLoading = false;\n    },\n  },\n});\n\nconst { reducer } = customerSlice;\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}