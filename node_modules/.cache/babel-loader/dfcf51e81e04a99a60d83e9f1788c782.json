{"ast":null,"code":"// import { configureStore } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\n// import {\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import authReducer from \"./slices/auth\";\n// import dashboardReducer from \"./slices/dashboard\";\n// import adminReducer from \"./slices/admin\";\n// import customersReducer from \"./slices/customers\";\n// import settingReducer from \"./slices/settings\";\n// const reducers = combineReducers({\n//   auth: authReducer,\n//   dashboard: dashboardReducer,\n//   admin: adminReducer,\n//   customers: customersReducer,\n//   settings: settingReducer,\n// });\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   whitelist: [\"auth\"],\n//   storage,\n// };\n// const persistedReducer = persistReducer(persistConfig, reducers);\n// const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n//   devTools: true,\n// });\n// export default store;","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/store.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { configureStore } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\n// import {\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// import authReducer from \"./slices/auth\";\n// import dashboardReducer from \"./slices/dashboard\";\n// import adminReducer from \"./slices/admin\";\n// import customersReducer from \"./slices/customers\";\n// import settingReducer from \"./slices/settings\";\n\n// const reducers = combineReducers({\n//   auth: authReducer,\n//   dashboard: dashboardReducer,\n//   admin: adminReducer,\n//   customers: customersReducer,\n//   settings: settingReducer,\n// });\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   whitelist: [\"auth\"],\n//   storage,\n// };\n\n// const persistedReducer = persistReducer(persistConfig, reducers);\n\n// const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n//   devTools: true,\n// });\n\n// export default store;\n"]},"metadata":{},"sourceType":"module"}