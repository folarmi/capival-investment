{"ast":null,"code":"class TokenService {\n  getLocalRefreshToken() {\n    var _user;\n\n    let localStore = localStorage.getItem(\"auth\");\n    let user;\n\n    try {\n      user = JSON.parse(localStore);\n    } catch (error) {\n      console.log(error);\n    }\n\n    return (_user = user) === null || _user === void 0 ? void 0 : _user.user.access_token;\n  }\n\n  getLocalAccessToken() {\n    var _auth;\n\n    let localStore = localStorage.getItem(\"persist:root\");\n    let auth;\n\n    try {\n      auth = JSON.parse(JSON.parse(localStore).auth);\n    } catch (error) {\n      console.log(error);\n    }\n\n    return (_auth = auth) === null || _auth === void 0 ? void 0 : _auth.user.user.access_token;\n  }\n\n  updateLocalAccessToken(token) {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    user.accessToken = token;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem(\"persist:root\"));\n  }\n\n  removeUser() {\n    // localStorage.removeItem(\"user\");\n    localStorage.clear();\n  }\n\n}\n\nexport default new TokenService();","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/services/token.service.js"],"names":["TokenService","getLocalRefreshToken","localStore","localStorage","getItem","user","JSON","parse","error","console","log","access_token","getLocalAccessToken","auth","updateLocalAccessToken","token","accessToken","setItem","stringify","getUser","removeUser","clear"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AACjBC,EAAAA,oBAAoB,GAAG;AAAA;;AACrB,QAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AACA,QAAIC,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAP;AACD,KAFD,CAEE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,oBAAOH,IAAP,0CAAO,MAAMA,IAAN,CAAWM,YAAlB;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AAAA;;AACpB,QAAIV,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAjB;AACA,QAAIS,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWL,UAAX,EAAuBW,IAAlC,CAAP;AACD,KAFD,CAEE,OAAOL,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,oBAAOK,IAAP,0CAAO,MAAMR,IAAN,CAAWA,IAAX,CAAgBM,YAAvB;AACD;;AAEDG,EAAAA,sBAAsB,CAACC,KAAD,EAAQ;AAC5B,QAAIV,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAC,IAAAA,IAAI,CAACW,WAAL,GAAmBD,KAAnB;AACAZ,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeb,IAAf,CAA7B;AACD;;AAEDc,EAAAA,OAAO,GAAG;AACR,WAAOb,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAP;AACD;;AAEDgB,EAAAA,UAAU,GAAG;AACX;AACAjB,IAAAA,YAAY,CAACkB,KAAb;AACD;;AApCgB;;AAuCnB,eAAe,IAAIrB,YAAJ,EAAf","sourcesContent":["class TokenService {\n  getLocalRefreshToken() {\n    let localStore = localStorage.getItem(\"auth\");\n    let user;\n    try {\n      user = JSON.parse(localStore);\n    } catch (error) {\n      console.log(error);\n    }\n    return user?.user.access_token;\n  }\n\n  getLocalAccessToken() {\n    let localStore = localStorage.getItem(\"persist:root\");\n    let auth;\n    try {\n      auth = JSON.parse(JSON.parse(localStore).auth);\n    } catch (error) {\n      console.log(error);\n    }\n    return auth?.user.user.access_token;\n  }\n\n  updateLocalAccessToken(token) {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    user.accessToken = token;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem(\"persist:root\"));\n  }\n\n  removeUser() {\n    // localStorage.removeItem(\"user\");\n    localStorage.clear();\n  }\n}\n\nexport default new TokenService();\n"]},"metadata":{},"sourceType":"module"}