{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/capival/src/pages/Admin/EditAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport eyeOpen from \"../../assets/icons/eyeOpen.svg\";\nimport passwordIcon from \"../../assets/icons/passwordIcon.svg\";\nimport close from \"../../assets/icons/close.svg\";\nimport { Button, Input, SearchableSelect, Text } from \"../../components\";\nimport { toggleAdminStatusAsync } from \"../../slices/admin\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAdmin = _ref => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password;\n\n  let {\n    closeDetailsModal,\n    singleAdmin,\n    item\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    toggleStatusLoading\n  } = useSelector(state => state.admin);\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().required(\"Please enter a password\").min(6, \"Password too short\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\")\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  };\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm({\n    formOptions,\n    defaultValues: {\n      name: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.name,\n      email: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.email,\n      role: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.role\n    }\n  });\n  const {\n    errors\n  } = formState;\n  const options = [{\n    label: \"super\",\n    value: \"super\"\n  }, {\n    label: \"role\",\n    value: \"role\"\n  }];\n  useEffect(() => {\n    const defaultValues = {\n      name: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.name,\n      email: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.email,\n      role: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.role\n    };\n    reset(defaultValues);\n  }, [singleAdmin, reset]); // const options = [\n  //   {\n  //     label: \"Super Admin\",\n  //     value: \"Super Admin\",\n  //   },\n  //   {\n  //     label: \"Finance\",\n  //     value: \"Finance\",\n  //   },\n  //   {\n  //     label: \"Operations\",\n  //     value: \"Operations\",\n  //   },\n  //   {\n  //     label: \"Developers\",\n  //     value: \"Developers\",\n  //   },\n  // ];\n\n  const submitForm = async values => {\n    var _values$role, _values$name, _values$email;\n\n    const variables = {\n      admin_id: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.id.toString(),\n      active: (singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.active) === 1 ? true : false,\n      role: (_values$role = values === null || values === void 0 ? void 0 : values.role) !== null && _values$role !== void 0 ? _values$role : singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.role,\n      name: (_values$name = values === null || values === void 0 ? void 0 : values.name) !== null && _values$name !== void 0 ? _values$name : singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.name,\n      email: (_values$email = values === null || values === void 0 ? void 0 : values.email) !== null && _values$email !== void 0 ? _values$email : singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.email,\n      password: values === null || values === void 0 ? void 0 : values.password\n    };\n    await dispatch(toggleAdminStatusAsync(variables)).unwrap().then(res => {\n      toast(res === null || res === void 0 ? void 0 : res.message);\n      closeDetailsModal();\n      window.location.reload();\n    }).catch(err => {\n      toast.error(err === null || err === void 0 ? void 0 : err.message[0]);\n      closeDetailsModal();\n      window.location.reload();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(submitForm),\n    div: true,\n    className: \"px-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\",\n        className: \"cursor-pointer mt-8\",\n        onClick: closeDetailsModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"h6\",\n      className: \"text-center\",\n      children: \"Edit Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Full Name\",\n        register: register(\"name\"),\n        error: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email Address\",\n        register: register(\"email\"),\n        error: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(SearchableSelect, {\n          options: options,\n          defaultValue: singleAdmin === null || singleAdmin === void 0 ? void 0 : singleAdmin.role // isDisabled={true}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: togglePasswordVisibility,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: passwordShown ? eyeOpen : passwordIcon,\n            alt: \"visible\",\n            className: \"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password\",\n          type: passwordShown ? \"text\" : \"password\",\n          register: register(\"password\"),\n          error: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-12\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          buttonText: \"Edit Admin\",\n          isLoading: toggleStatusLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditAdmin, \"IcNUFo6Shk8ZfhTMezFV+urY25w=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = EditAdmin;\nexport { EditAdmin };\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAdmin\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/pages/Admin/EditAdmin.js"],"names":["React","useEffect","useState","Yup","useDispatch","useSelector","useForm","yupResolver","eyeOpen","passwordIcon","close","Button","Input","SearchableSelect","Text","toggleAdminStatusAsync","toast","EditAdmin","closeDetailsModal","singleAdmin","item","dispatch","toggleStatusLoading","state","admin","passwordShown","setPasswordShown","togglePasswordVisibility","validationSchema","object","shape","password","string","required","min","matches","formOptions","resolver","register","handleSubmit","formState","reset","defaultValues","name","email","role","errors","options","label","value","submitForm","values","variables","admin_id","id","toString","active","unwrap","then","res","message","window","location","reload","catch","err","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport eyeOpen from \"../../assets/icons/eyeOpen.svg\";\nimport passwordIcon from \"../../assets/icons/passwordIcon.svg\";\nimport close from \"../../assets/icons/close.svg\";\nimport { Button, Input, SearchableSelect, Text } from \"../../components\";\nimport { toggleAdminStatusAsync } from \"../../slices/admin\";\nimport { toast } from \"react-toastify\";\n\nconst EditAdmin = ({ closeDetailsModal, singleAdmin, item }) => {\n  const dispatch = useDispatch();\n  const { toggleStatusLoading } = useSelector((state) => state.admin);\n\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string()\n      .required(\"Please enter a password\")\n      .min(6, \"Password too short\")\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n  });\n\n  const formOptions = { resolver: yupResolver(validationSchema) };\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    formOptions,\n    defaultValues: {\n      name: singleAdmin?.name,\n      email: singleAdmin?.email,\n      role: singleAdmin?.role,\n    },\n  });\n\n  const { errors } = formState;\n\n  const options = [\n    {\n      label: \"super\",\n      value: \"super\",\n    },\n    {\n      label: \"role\",\n      value: \"role\",\n    },\n  ];\n\n  useEffect(() => {\n    const defaultValues = {\n      name: singleAdmin?.name,\n      email: singleAdmin?.email,\n      role: singleAdmin?.role,\n    };\n    reset(defaultValues);\n  }, [singleAdmin, reset]);\n\n  // const options = [\n  //   {\n  //     label: \"Super Admin\",\n  //     value: \"Super Admin\",\n  //   },\n  //   {\n  //     label: \"Finance\",\n  //     value: \"Finance\",\n  //   },\n  //   {\n  //     label: \"Operations\",\n  //     value: \"Operations\",\n  //   },\n  //   {\n  //     label: \"Developers\",\n  //     value: \"Developers\",\n  //   },\n  // ];\n\n  const submitForm = async (values) => {\n    const variables = {\n      admin_id: singleAdmin?.id.toString(),\n      active: singleAdmin?.active === 1 ? true : false,\n      role: values?.role ?? singleAdmin?.role,\n      name: values?.name ?? singleAdmin?.name,\n      email: values?.email ?? singleAdmin?.email,\n      password: values?.password,\n    };\n\n    await dispatch(toggleAdminStatusAsync(variables))\n      .unwrap()\n      .then((res) => {\n        toast(res?.message);\n        closeDetailsModal();\n        window.location.reload();\n      })\n      .catch((err) => {\n        toast.error(err?.message[0]);\n        closeDetailsModal();\n        window.location.reload();\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitForm)} div className=\"px-10\">\n      <div className=\"flex justify-end\">\n        <img\n          src={close}\n          alt=\"close\"\n          className=\"cursor-pointer mt-8\"\n          onClick={closeDetailsModal}\n        />\n      </div>\n\n      <Text type=\"h6\" className=\"text-center\">\n        Edit Admin\n      </Text>\n\n      <div className=\"mt-8\">\n        <Input\n          label=\"Full Name\"\n          register={register(\"name\")}\n          error={errors?.name?.message}\n        />\n\n        <Input\n          label=\"Email Address\"\n          register={register(\"email\")}\n          error={errors?.email?.message}\n          readOnly\n        />\n\n        <div className=\"mb-6\">\n          <SearchableSelect\n            options={options}\n            defaultValue={singleAdmin?.role}\n            // isDisabled={true}\n          />\n        </div>\n\n        <div className=\"w-full relative\">\n          {\n            <i onClick={togglePasswordVisibility}>\n              <img\n                src={passwordShown ? eyeOpen : passwordIcon}\n                alt=\"visible\"\n                className=\"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n              />\n            </i>\n          }\n          <Input\n            label=\"Password\"\n            type={passwordShown ? \"text\" : \"password\"}\n            register={register(\"password\")}\n            error={errors?.password?.message}\n          />\n        </div>\n\n        <div className=\"my-12\">\n          <Button\n            type=\"primary\"\n            buttonText=\"Edit Admin\"\n            isLoading={toggleStatusLoading}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport { EditAdmin };\n"]},"metadata":{},"sourceType":"module"}