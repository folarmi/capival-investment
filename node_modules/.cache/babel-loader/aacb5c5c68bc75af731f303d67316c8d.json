{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/capival/src/pages/Admin/AddAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Select from \"react-select\";\nimport { addNewAdminAsync } from \"../../slices/admin\";\nimport eyeOpen from \"../../assets/icons/eyeOpen.svg\";\nimport passwordIcon from \"../../assets/icons/passwordIcon.svg\";\nimport close from \"../../assets/icons/close.svg\";\nimport { Button, Input, SearchableSelect, Text } from \"../../components\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAdmin = _ref => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$confirm_passw;\n\n  let {\n    closeDetailsModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    addAdminLoading\n  } = useSelector(state => state.admin);\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n  const options = [{\n    label: \"super\",\n    value: \"super\"\n  }, {\n    label: \"admin\",\n    value: \"admin\"\n  }];\n  const {\n    control\n  } = useForm();\n  const customStyles = {\n    control: styles => ({ ...styles,\n      minHeight: 50\n    })\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordShown(!setConfirmPasswordShown);\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Full Name is required\"),\n    email: Yup.string().email(\"Invalid email format\").required(\"Email is Required\"),\n    role: Yup.string().required(\"Role is required\"),\n    password: Yup.string().required(\"Please enter a password\").min(6, \"Password too short\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\n    confirm_password: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  };\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm({\n    formOptions\n  });\n  const {\n    errors\n  } = formState;\n\n  const getRole = values => {\n    setSelectedRole(values === null || values === void 0 ? void 0 : values.value);\n  };\n\n  const submitForm = async values => {\n    const variables = {\n      email: values === null || values === void 0 ? void 0 : values.email,\n      name: values === null || values === void 0 ? void 0 : values.name,\n      password: values === null || values === void 0 ? void 0 : values.password,\n      role: selectedRole,\n      active: true\n    };\n    await dispatch(addNewAdminAsync(variables)).unwrap().then(res => {\n      toast(res === null || res === void 0 ? void 0 : res.message);\n      closeDetailsModal();\n      console.log(res);\n      window.location.reload();\n    }).catch(err => {\n      toast.error(err === null || err === void 0 ? void 0 : err.message);\n      closeDetailsModal();\n      window.location.reload();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(submitForm),\n    div: true,\n    className: \"px-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\",\n        className: \"cursor-pointer mt-8\",\n        onClick: closeDetailsModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"h6\",\n      className: \"text-center\",\n      children: \"Add Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Full Name\",\n        register: register(\"name\"),\n        error: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Email Address\",\n        register: register(\"email\"),\n        error: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"role\",\n          render: _ref2 => {\n            let {\n              field: {\n                onChange\n              }\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Select, {\n              options: options,\n              onChange: getRole,\n              styles: customStyles,\n              placeholder: \"Select role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: togglePasswordVisibility,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: passwordShown ? eyeOpen : passwordIcon,\n            alt: \"visible\",\n            className: \"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password\",\n          type: passwordShown ? \"text\" : \"password\",\n          register: register(\"password\"),\n          error: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: toggleConfirmPasswordVisibility,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: confirmPasswordShown ? eyeOpen : passwordIcon,\n            alt: \"visible\",\n            className: \"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Confirm Password\",\n          type: confirmPasswordShown ? \"text\" : \"password\",\n          register: register(\"confirm_password\"),\n          error: errors === null || errors === void 0 ? void 0 : (_errors$confirm_passw = errors.confirm_password) === null || _errors$confirm_passw === void 0 ? void 0 : _errors$confirm_passw.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-12\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          buttonText: \"Add Admin\",\n          isLoading: addAdminLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddAdmin, \"M6ML+0d6T4xbDxh9SSozJv9LZGA=\", false, function () {\n  return [useDispatch, useSelector, useForm, useForm];\n});\n\n_c = AddAdmin;\nexport { AddAdmin };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAdmin\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/capival/src/pages/Admin/AddAdmin.js"],"names":["React","useState","Yup","useDispatch","useSelector","Controller","useForm","yupResolver","Select","addNewAdminAsync","eyeOpen","passwordIcon","close","Button","Input","SearchableSelect","Text","toast","AddAdmin","closeDetailsModal","dispatch","addAdminLoading","state","admin","selectedRole","setSelectedRole","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","options","label","value","control","customStyles","styles","minHeight","togglePasswordVisibility","toggleConfirmPasswordVisibility","validationSchema","object","shape","name","string","required","email","role","password","min","matches","confirm_password","oneOf","ref","formOptions","resolver","register","handleSubmit","formState","reset","errors","getRole","values","submitForm","variables","active","unwrap","then","res","message","console","log","window","location","reload","catch","err","error","field","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,gBAAxB,EAA0CC,IAA1C,QAAsD,kBAAtD;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,QAAQ,GAAG,QAA2B;AAAA;;AAAA;;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAC1C,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAsBjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAvC;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC2B,oBAAD,EAAuBC,uBAAvB,IAAkD5B,QAAQ,CAAC,KAAD,CAAhE;AAEA,QAAM6B,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADc,EAKd;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALc,CAAhB;AAWA,QAAM;AAAEC,IAAAA;AAAF,MAAc3B,OAAO,EAA3B;AAEA,QAAM4B,YAAY,GAAG;AACnBD,IAAAA,OAAO,EAAGE,MAAD,KAAa,EACpB,GAAGA,MADiB;AAEpBC,MAAAA,SAAS,EAAE;AAFS,KAAb;AADU,GAArB;;AAOA,QAAMC,wBAAwB,GAAG,MAAM;AACrCV,IAAAA,gBAAgB,CAACD,aAAa,GAAG,KAAH,GAAW,IAAzB,CAAhB;AACD,GAFD;;AAIA,QAAMY,+BAA+B,GAAG,MAAM;AAC5CT,IAAAA,uBAAuB,CAAC,CAACA,uBAAF,CAAvB;AACD,GAFD;;AAIA,QAAMU,gBAAgB,GAAGrC,GAAG,CAACsC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAExC,GAAG,CAACyC,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CADoC;AAE1CC,IAAAA,KAAK,EAAE3C,GAAG,CAACyC,MAAJ,GACJE,KADI,CACE,sBADF,EAEJD,QAFI,CAEK,mBAFL,CAFmC;AAK1CE,IAAAA,IAAI,EAAE5C,GAAG,CAACyC,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CALoC;AAM1CG,IAAAA,QAAQ,EAAE7C,GAAG,CAACyC,MAAJ,GACPC,QADO,CACE,yBADF,EAEPI,GAFO,CAEH,CAFG,EAEA,oBAFA,EAGPC,OAHO,CAIN,gEAJM,EAKN,oGALM,CANgC;AAa1CC,IAAAA,gBAAgB,EAAEhD,GAAG,CAACyC,MAAJ,GAAaQ,KAAb,CAChB,CAACjD,GAAG,CAACkD,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADgB,EAEhB,sBAFgB;AAbwB,GAAnB,CAAzB;AAmBA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,QAAQ,EAAE/C,WAAW,CAACgC,gBAAD;AAAvB,GAApB;AAEA,QAAM;AAAEgB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA;AAArC,MAA+CpD,OAAO,CAAC;AAC3D+C,IAAAA;AAD2D,GAAD,CAA5D;AAIA,QAAM;AAAEM,IAAAA;AAAF,MAAaF,SAAnB;;AAEA,QAAMG,OAAO,GAAIC,MAAD,IAAY;AAC1BpC,IAAAA,eAAe,CAACoC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAE7B,KAAT,CAAf;AACD,GAFD;;AAIA,QAAM8B,UAAU,GAAG,MAAOD,MAAP,IAAkB;AACnC,UAAME,SAAS,GAAG;AAChBlB,MAAAA,KAAK,EAAEgB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEhB,KADC;AAEhBH,MAAAA,IAAI,EAAEmB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEnB,IAFE;AAGhBK,MAAAA,QAAQ,EAAEc,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEd,QAHF;AAIhBD,MAAAA,IAAI,EAAEtB,YAJU;AAKhBwC,MAAAA,MAAM,EAAE;AALQ,KAAlB;AAQA,UAAM5C,QAAQ,CAACX,gBAAgB,CAACsD,SAAD,CAAjB,CAAR,CACHE,MADG,GAEHC,IAFG,CAEGC,GAAD,IAAS;AACblD,MAAAA,KAAK,CAACkD,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEC,OAAN,CAAL;AACAjD,MAAAA,iBAAiB;AACjBkD,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACd1D,MAAAA,KAAK,CAAC2D,KAAN,CAAYD,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAEP,OAAjB;AACAjD,MAAAA,iBAAiB;AACjBoD,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAZG,CAAN;AAaD,GAtBD;;AAwBA,sBACE;AAAM,IAAA,QAAQ,EAAEjB,YAAY,CAACM,UAAD,CAA5B;AAA0C,IAAA,GAAG,MAA7C;AAA8C,IAAA,SAAS,EAAC,OAAxD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAElD,KADP;AAEE,QAAA,GAAG,EAAC,OAFN;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAIE,QAAA,OAAO,EAAEO;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,QAAQ,EAAEoC,QAAQ,CAAC,MAAD,CAFpB;AAGE,QAAA,KAAK,EAAEI,MAAF,aAAEA,MAAF,uCAAEA,MAAM,CAAEjB,IAAV,iDAAE,aAAc0B;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,QAAQ,EAAEb,QAAQ,CAAC,OAAD,CAFpB;AAGE,QAAA,KAAK,EAAEI,MAAF,aAAEA,MAAF,wCAAEA,MAAM,CAAEd,KAAV,kDAAE,cAAeuB;AAHxB;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAEnC,OADX;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,MAAM,EAAE;AAAA,gBAAC;AAAE4C,cAAAA,KAAK,EAAE;AAAEC,gBAAAA;AAAF;AAAT,aAAD;AAAA,gCACN,QAAC,MAAD;AACE,cAAA,OAAO,EAAEhD,OADX;AAEE,cAAA,QAAQ,EAAE8B,OAFZ;AAGE,cAAA,MAAM,EAAE1B,YAHV;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eA4BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCAEI;AAAG,UAAA,OAAO,EAAEG,wBAAZ;AAAA,iCACE;AACE,YAAA,GAAG,EAAEX,aAAa,GAAGhB,OAAH,GAAaC,YADjC;AAEE,YAAA,GAAG,EAAC,SAFN;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,IAAI,EAAEe,aAAa,GAAG,MAAH,GAAY,UAFjC;AAGE,UAAA,QAAQ,EAAE6B,QAAQ,CAAC,UAAD,CAHpB;AAIE,UAAA,KAAK,EAAEI,MAAF,aAAEA,MAAF,2CAAEA,MAAM,CAAEZ,QAAV,qDAAE,iBAAkBqB;AAJ3B;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eA8CE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCAEI;AAAG,UAAA,OAAO,EAAE9B,+BAAZ;AAAA,iCACE;AACE,YAAA,GAAG,EAAEV,oBAAoB,GAAGlB,OAAH,GAAaC,YADxC;AAEE,YAAA,GAAG,EAAC,SAFN;AAGE,YAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,kBADR;AAEE,UAAA,IAAI,EAAEiB,oBAAoB,GAAG,MAAH,GAAY,UAFxC;AAGE,UAAA,QAAQ,EAAE2B,QAAQ,CAAC,kBAAD,CAHpB;AAIE,UAAA,KAAK,EAAEI,MAAF,aAAEA,MAAF,gDAAEA,MAAM,CAAET,gBAAV,0DAAE,sBAA0BkB;AAJnC;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,eAgEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,UAAU,EAAC,WAFb;AAGE,UAAA,SAAS,EAAE/C;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyFD,CApLD;;GAAMH,Q;UACaf,W,EACWC,W,EAiBRE,O,EAsCiCA,O;;;KAzDjDY,Q;AAsLN,SAASA,QAAT","sourcesContent":["import React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Select from \"react-select\";\n\nimport { addNewAdminAsync } from \"../../slices/admin\";\nimport eyeOpen from \"../../assets/icons/eyeOpen.svg\";\nimport passwordIcon from \"../../assets/icons/passwordIcon.svg\";\nimport close from \"../../assets/icons/close.svg\";\nimport { Button, Input, SearchableSelect, Text } from \"../../components\";\nimport { toast } from \"react-toastify\";\n\nconst AddAdmin = ({ closeDetailsModal }) => {\n  const dispatch = useDispatch();\n  const { addAdminLoading } = useSelector((state) => state.admin);\n\n  const [selectedRole, setSelectedRole] = useState(\"\");\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n\n  const options = [\n    {\n      label: \"super\",\n      value: \"super\",\n    },\n    {\n      label: \"admin\",\n      value: \"admin\",\n    },\n  ];\n\n  const { control } = useForm();\n\n  const customStyles = {\n    control: (styles) => ({\n      ...styles,\n      minHeight: 50,\n    }),\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setConfirmPasswordShown(!setConfirmPasswordShown);\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Full Name is required\"),\n    email: Yup.string()\n      .email(\"Invalid email format\")\n      .required(\"Email is Required\"),\n    role: Yup.string().required(\"Role is required\"),\n    password: Yup.string()\n      .required(\"Please enter a password\")\n      .min(6, \"Password too short\")\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      ),\n    confirm_password: Yup.string().oneOf(\n      [Yup.ref(\"password\"), null],\n      \"Passwords must match\"\n    ),\n  });\n\n  const formOptions = { resolver: yupResolver(validationSchema) };\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    formOptions,\n  });\n\n  const { errors } = formState;\n\n  const getRole = (values) => {\n    setSelectedRole(values?.value);\n  };\n\n  const submitForm = async (values) => {\n    const variables = {\n      email: values?.email,\n      name: values?.name,\n      password: values?.password,\n      role: selectedRole,\n      active: true,\n    };\n\n    await dispatch(addNewAdminAsync(variables))\n      .unwrap()\n      .then((res) => {\n        toast(res?.message);\n        closeDetailsModal();\n        console.log(res);\n        window.location.reload();\n      })\n      .catch((err) => {\n        toast.error(err?.message);\n        closeDetailsModal();\n        window.location.reload();\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitForm)} div className=\"px-10\">\n      <div className=\"flex justify-end\">\n        <img\n          src={close}\n          alt=\"close\"\n          className=\"cursor-pointer mt-8\"\n          onClick={closeDetailsModal}\n        />\n      </div>\n\n      <Text type=\"h6\" className=\"text-center\">\n        Add Admin\n      </Text>\n\n      <div className=\"mt-8\">\n        <Input\n          label=\"Full Name\"\n          register={register(\"name\")}\n          error={errors?.name?.message}\n        />\n\n        <Input\n          label=\"Email Address\"\n          register={register(\"email\")}\n          error={errors?.email?.message}\n        />\n\n        <div className=\"mb-6\">\n          <Controller\n            control={control}\n            name=\"role\"\n            render={({ field: { onChange } }) => (\n              <Select\n                options={options}\n                onChange={getRole}\n                styles={customStyles}\n                placeholder=\"Select role\"\n              />\n            )}\n          />\n        </div>\n\n        <div className=\"w-full relative\">\n          {\n            <i onClick={togglePasswordVisibility}>\n              <img\n                src={passwordShown ? eyeOpen : passwordIcon}\n                alt=\"visible\"\n                className=\"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n              />\n            </i>\n          }\n          <Input\n            label=\"Password\"\n            type={passwordShown ? \"text\" : \"password\"}\n            register={register(\"password\")}\n            error={errors?.password?.message}\n          />\n        </div>\n\n        <div className=\"w-full relative\">\n          {\n            <i onClick={toggleConfirmPasswordVisibility}>\n              <img\n                src={confirmPasswordShown ? eyeOpen : passwordIcon}\n                alt=\"visible\"\n                className=\"w-5 absolute mt-[35px] md:mt-10 ml-[89%]\"\n              />\n            </i>\n          }\n          <Input\n            label=\"Confirm Password\"\n            type={confirmPasswordShown ? \"text\" : \"password\"}\n            register={register(\"confirm_password\")}\n            error={errors?.confirm_password?.message}\n          />\n        </div>\n\n        <div className=\"my-12\">\n          <Button\n            type=\"primary\"\n            buttonText=\"Add Admin\"\n            isLoading={addAdminLoading}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport { AddAdmin };\n"]},"metadata":{},"sourceType":"module"}